digraph "classes" {
rankdir=BT
charset="utf-8"
"interpret.add" [color="black", fontcolor="black", label="{add|\l|execute()\l}", shape="record", style="solid"];
"interpret.call" [color="black", fontcolor="black", label="{call|\l|execute()\l}", shape="record", style="solid"];
"interpret.createframe" [color="black", fontcolor="black", label="{createframe|\l|execute()\l}", shape="record", style="solid"];
"interpret.defvar" [color="black", fontcolor="black", label="{defvar|\l|execute()\l}", shape="record", style="solid"];
"interpret.instrucionFactory" [color="black", fontcolor="black", label="{instrucionFactory|\l|createInstruction(cls, opcode, order, args)\l}", shape="record", style="solid"];
"interpret.instruction" [color="black", fontcolor="black", label="{instruction|instructionCounter\linstructionCounter : int\lprogramCounter\lprogramCounter : int\l|addGfVar(var)\laddVar(var)\lcallStackEmpty()\lcreateFrame()\lexecuteOnPC()\lgetArgs()\lgetCallStack()\lgetFrameStack()\lgetGfVar(var)\lgetGfVarList()\lgetInstList()\lgetInstructionCounter()\lgetLabelList()\lgetLabelPos(label)\lgetLocalFrame()\lgetName()\lgetOrder()\lgetPC()\lgetTemporaryFrame()\lgetVarValue(var)\lpopCallStack()\lpopFrame()\lpopStack()\lpushCallStack(value)\lpushFrame()\lpushStack(symbol)\lrun()\lsetGfVar(var, type_, value)\lsetPC(value)\lsetVarValue(var, type_, value)\lsortInstList()\lstackEmpty()\lstructureLabel()\l}", shape="record", style="solid"];
"interpret.jump" [color="black", fontcolor="black", label="{jump|\l|execute()\l}", shape="record", style="solid"];
"interpret.move" [color="black", fontcolor="black", label="{move|\l|execute()\l}", shape="record", style="solid"];
"interpret.pushframe" [color="black", fontcolor="black", label="{pushframe|\l|execute()\l}", shape="record", style="solid"];
"interpret.read" [color="black", fontcolor="black", label="{read|\l|execute()\l}", shape="record", style="solid"];
"interpret.write" [color="black", fontcolor="black", label="{write|\l|execute()\l}", shape="record", style="solid"];
"interpret.add" -> "interpret.instruction" [arrowhead="empty", arrowtail="none"];
"interpret.call" -> "interpret.instruction" [arrowhead="empty", arrowtail="none"];
"interpret.createframe" -> "interpret.instruction" [arrowhead="empty", arrowtail="none"];
"interpret.defvar" -> "interpret.instruction" [arrowhead="empty", arrowtail="none"];
"interpret.jump" -> "interpret.instruction" [arrowhead="empty", arrowtail="none"];
"interpret.move" -> "interpret.instruction" [arrowhead="empty", arrowtail="none"];
"interpret.pushframe" -> "interpret.instruction" [arrowhead="empty", arrowtail="none"];
"interpret.read" -> "interpret.instruction" [arrowhead="empty", arrowtail="none"];
"interpret.write" -> "interpret.instruction" [arrowhead="empty", arrowtail="none"];
"interpret.frame" -> "interpret.instruction" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_temporaryFrame", style="solid"];
}
